diff --git a/DEPS b/DEPS
index 0d6b49d3b4..411a4a40eb 100644
--- a/DEPS
+++ b/DEPS
@@ -20,10 +20,6 @@ deps = {
     Var('chromium_url') + '/chromium/buildtools.git' + '@' + '505de88083136eefd056e5ee4ca0f01fe9b33de8',
   'v8/base/trace_event/common':
     Var('chromium_url') + '/chromium/src/base/trace_event/common.git' + '@' + '0e9a47d74970bee1bbfc063c47215406f8918699',
-  'v8/third_party/android_tools': {
-    'url': Var('chromium_url') + '/android_tools.git' + '@' + 'a2e9bc7c1b41d983577907df51d339fb1e0fd02f',
-    'condition': 'checkout_android',
-  },
   'v8/third_party/catapult': {
     'url': Var('chromium_url') + '/catapult.git' + '@' + '11d7efb857ae77eff1cea4640e3f3d9ac49cba0a',
     'condition': 'checkout_android',
@@ -60,7 +56,6 @@ deps = {

 recursedeps = [
   'v8/buildtools',
-  'v8/third_party/android_tools',
 ]

 include_rules = [
diff --git a/Makefile b/Makefile
index eb146ac244..2ca1cc709f 100644
--- a/Makefile
+++ b/Makefile
@@ -47,6 +47,13 @@ endif
 ifeq ($(disassembler), on)
   GYPFLAGS += -Dv8_enable_disassembler=1
 endif
+# inspector=on/off
+ifeq ($(inspector), on)
+  GYPFLAGS += -Dv8_enable_inspector=1
+endif
+ifeq ($(inspector), off)
+  GYPFLAGS += -Dv8_enable_inspector=0
+endif
 # objectprint=on
 ifeq ($(objectprint), on)
   GYPFLAGS += -Dv8_object_print=1
diff --git a/Makefile.android b/Makefile.android
index 417152177d..e129be63e3 100644
--- a/Makefile.android
+++ b/Makefile.android
@@ -35,18 +35,27 @@ MODES = release debug
 ANDROID_BUILDS = $(foreach mode,$(MODES), \
                    $(addsuffix .$(mode),$(ANDROID_ARCHES)))

+HOST_OS = $(shell uname -s | sed -e 's/Linux/linux/;s/Darwin/darwin/')
+HOST_ARCH = $(shell uname -m | sed -e 's/i[3456]86/x86/')
+
 ifeq ($(ARCH), android_arm)
   DEFINES  = target_arch=arm v8_target_arch=arm
+  ANDROID_TOOLCHAIN = $(ANDROID_NDK_ROOT)/toolchains/arm-linux-androideabi-4.9/prebuilt/$(HOST_OS)-$(HOST_ARCH)/arm-linux-androideabi/bin
 else ifeq ($(ARCH), android_arm64)
   DEFINES  = target_arch=arm64 v8_target_arch=arm64
+  ANDROID_TOOLCHAIN = $(ANDROID_NDK_ROOT)/toolchains/aarch64-linux-android-4.9/prebuilt/$(HOST_OS)-$(HOST_ARCH)/aarch64-linux-android/bin
 else ifeq ($(ARCH), android_mipsel)
   DEFINES  = target_arch=mipsel v8_target_arch=mipsel
+  ANDROID_TOOLCHAIN = $(ANDROID_NDK_ROOT)/toolchains/mipsel-linux-android-4.9/prebuilt/$(HOST_OS)-$(HOST_ARCH)/mipsel-linux-android/bin
 else ifeq ($(ARCH), android_ia32)
   DEFINES = target_arch=ia32 v8_target_arch=ia32
+  ANDROID_TOOLCHAIN = $(ANDROID_NDK_ROOT)/toolchains/x86-4.9/prebuilt/$(HOST_OS)-$(HOST_ARCH)/i686-linux-android/bin
 else ifeq ($(ARCH), android_x64)
   DEFINES = target_arch=x64 v8_target_arch=x64
+  ANDROID_TOOLCHAIN = $(ANDROID_NDK_ROOT)/toolchains/x86_64-4.9/prebuilt/$(HOST_OS)-$(HOST_ARCH)/x86_64-linux-android/bin
 else ifeq ($(ARCH), android_x87)
   DEFINES = target_arch=ia32 v8_target_arch=x87
+  ANDROID_TOOLCHAIN = $(ANDROID_NDK_ROOT)/toolchains/x86-4.9/prebuilt/$(HOST_OS)-$(HOST_ARCH)/i686-linux-android/bin
 else
   $(error Target architecture "${ARCH}" is not supported)
 endif
@@ -57,6 +66,7 @@ DEFINES += OS=android
 .SECONDEXPANSION:
 $(ANDROID_BUILDS): $(OUTDIR)/Makefile.$$@
 	@$(MAKE) -C "$(OUTDIR)" -f Makefile.$@ \
+	          AR="$(ANDROID_TOOLCHAIN)/ar" \
 	          BUILDTYPE=$(shell echo $(subst .,,$(suffix $@)) | \
 	                      python -c "print raw_input().capitalize()") \
 	          builddir="$(shell pwd)/$(OUTDIR)/$@"
diff --git a/gypfiles/standalone.gypi b/gypfiles/standalone.gypi
index 63930d8aef..0419da0097 100644
--- a/gypfiles/standalone.gypi
+++ b/gypfiles/standalone.gypi
@@ -1116,7 +1116,7 @@
         'configurations': {
           'Release': {
             'cflags': [
-              '-fomit-frame-pointer',
+              '-fomit-frame-pointer', '-O2'
             ],
           },  # Release
         },  # configurations
@@ -1234,10 +1234,7 @@
               }],
               ['(target_arch=="arm" or target_arch=="arm64" or target_arch=="x64" or target_arch=="ia32") and component!="shared_library"', {
                 'cflags': [
-                  '-fPIE',
-                ],
-                'ldflags': [
-                  '-pie',
+                  '-fPIC',
                 ],
               }],
             ],
diff --git a/src/v8.gyp b/src/v8.gyp
index a6f72c9f1e..563341802f 100644
--- a/src/v8.gyp
+++ b/src/v8.gyp
@@ -135,6 +135,7 @@
     {
       'target_name': 'v8_init',
       'type': 'static_library',
+      'standalone_static_library': 1,
       'dependencies': [
         'v8_initializers',
       ],
@@ -159,6 +160,7 @@
     {
       'target_name': 'v8_initializers',
       'type': 'static_library',
+      'standalone_static_library': 1,
       'dependencies': [
         'v8_base',
       ],
@@ -290,6 +292,7 @@
     {
       'target_name': 'v8_snapshot',
       'type': 'static_library',
+      'standalone_static_library': 1,
       'conditions': [
         ['want_separate_host_toolset==1', {
           'toolsets': ['host', 'target'],
@@ -374,6 +377,7 @@
     {
       'target_name': 'v8_nosnapshot',
       'type': 'static_library',
+      'standalone_static_library': 1,
       'dependencies': [
         'v8_base',
       ],
@@ -405,6 +409,7 @@
     {
       'target_name': 'v8_external_snapshot',
       'type': 'static_library',
+      'standalone_static_library': 1,
       'conditions': [
         [ 'v8_use_external_startup_data==1', {
           'conditions': [
@@ -523,6 +528,7 @@
     {
       'target_name': 'v8_base',
       'type': 'static_library',
+      'standalone_static_library': 1,
       'dependencies': [
         'v8_libbase',
         'v8_libsampler',
@@ -1850,7 +1856,8 @@
     },
     {
       'target_name': 'v8_libbase',
-      'type': '<(component)',
+      'type': 'static_library',
+      'standalone_static_library': 1,
       'variables': {
         'optimize': 'max',
       },
@@ -2181,7 +2188,8 @@
     },
     {
       'target_name': 'v8_libplatform',
-      'type': '<(component)',
+      'type': 'static_library',
+      'standalone_static_library': 1,
       'variables': {
         'optimize': 'max',
       },
@@ -2237,6 +2245,7 @@
     {
       'target_name': 'v8_libsampler',
       'type': 'static_library',
+      'standalone_static_library': 1,
       'variables': {
         'optimize': 'max',
       },
